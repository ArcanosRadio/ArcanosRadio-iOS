update_fastlane
fastlane_version "1.104.0"
default_platform :ios

platform :ios do
    before_all do
        puts 'Inject environment variables'
        env_vars = File.read('env_vars.properties').scan /(\S+)=(\S+)/
        env_vars.each { |v| ENV[v.first] = v.last.gsub /\A['"]|['"]\Z/, '' }

        ensure_git_status_clean
        git_pull
        increment_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
    end

    desc "Runs all the tests"
    lane :test do
        scan
    end

    lane :alpha do
        cert(output_path: "./Certificates/")
        sigh(
            output_path: "./Certificates/",
            adhoc: true,
            provisioning_name: 'ArcanosTrial'
        )

        gym(scheme: "ArcanosRadio")
        changelog_from_git_commits
        crashlytics(
            crashlytics_path: "./Frameworks/Crashlytics.framework",
            api_token: ENV['CRASHLYTICS_API_TOKEN'],
            build_secret: ENV['CRASHLYTICS_BUILD_SECRET'],
            groups: "dev-ios"
        )

        version = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")
        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        commit_version_bump(message: "Fastlane alpha: #{version} (#{build_number})",
                            xcodeproj: "ArcanosRadio.xcodeproj")
    end

    lane :beta do
        cert(output_path: "./Certificates/")
        sigh(
            output_path: "./Certificates/",
            adhoc: true,
            provisioning_name: 'ArcanosTrial'
        )
        # version_raw = increment_version_number(bump_type: "patch",
        #                                        xcodeproj: "ArcanosRadio.xcodeproj")
        # build_number = increment_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        # version_alpha = version_raw + "-alpha"
        # version_beta = version_raw + "-beta"
        # increment_version_number(version_number: version_beta,
        #                          xcodeproj: "ArcanosRadio.xcodeproj")
        gym(scheme: "ArcanosRadio")
        changelog_from_git_commits
        crashlytics(
            crashlytics_path: "./Frameworks/Crashlytics.framework",
            api_token: ENV['CRASHLYTICS_API_TOKEN'],
            build_secret: ENV['CRASHLYTICS_BUILD_SECRET'],
            groups: "dev-ios"
        )

        # increment_version_number(version_number: version_alpha,
        #                          xcodeproj: "ArcanosRadio.xcodeproj")
        # commit_version_bump(message: "[iOS] Increment version to #{version_alpha}.#{build_number} (fastlane beta)",
        #                     xcodeproj: "ArcanosRadio.xcodeproj")

        version = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")
        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        commit_version_bump(message: "Fastlane beta: #{version} (#{build_number})",
                            xcodeproj: "ArcanosRadio.xcodeproj")
    end

    lane :trial do
        cert(output_path: "./Certificates/")
        sigh(
            output_path: "./Certificates/",
            adhoc: false,
            provisioning_name: 'ArcanosStore'
        )
        gym(scheme: "ArcanosRadio")
        testflight

        version = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")
        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        commit_version_bump(message: "Fastlane trial: #{version} (#{build_number})",
                            xcodeproj: "ArcanosRadio.xcodeproj")
    end

    lane :store do
        cert(output_path: "./Certificates/")
        sigh(
            output_path: "./Certificates/",
            adhoc: false,
            provisioning_name: 'ArcanosStore'
        )
        # build_number = increment_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        snapshot
        gym(scheme: "ArcanosRadio")
        deliver(force: true)

        version = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")
        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        commit_version_bump(message: "Fastlane store: #{version} (#{build_number})",
                            xcodeproj: "ArcanosRadio.xcodeproj")
    end

    after_all do |lane|
        push_to_git_remote
    end

    error do |lane, exception|
    end
end
