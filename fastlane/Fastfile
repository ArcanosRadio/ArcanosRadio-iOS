update_fastlane
default_platform :ios

platform :ios do
    before_all do
        puts 'Inject environment variables'
        env_vars = File.read('env_vars.properties').scan /(\S+)=(\S+)/
        env_vars.each { |v| ENV[v.first] = v.last.gsub /\A['"]|['"]\Z/, '' }

        ensure_xcode_version(version: "9.2")
        xcversion(version: "9.2")
        ensure_git_status_clean
        git_pull
        increment_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
    end

    desc "Builds alpha release and upload to Crashlytics"
    lane :alpha do
        get_certificates(output_path: "./Certificates/")
        get_provisioning_profile(
            output_path: "./Certificates/",
            adhoc: true,
            provisioning_name: 'ArcanosTrial'
        )

        # Add "alpha" to the version number, e.g: 1.0.0-alpha
        # This will affect only this build, source code on the
        # repository will keep numbers only.
        version_raw = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")
        version_alpha = version_raw + "-alpha"
        increment_version_number(
            version_number: version_alpha,
            xcodeproj: "ArcanosRadio.xcodeproj")

        build_app(scheme: "ArcanosRadio")
        changes = changelog_from_git_commits(tag_match_pattern: "*alpha*")
        crashlytics(
            crashlytics_path: "./Frameworks/Crashlytics.framework",
            api_token: ENV['CRASHLYTICS_API_TOKEN'],
            build_secret: ENV['CRASHLYTICS_BUILD_SECRET'],
            groups: "dev-ios",
            notes: changes
        )

        # Remove "alpha" from the version number, e.g: 1.0.0
        increment_version_number(
            version_number: version_raw,
            xcodeproj: "ArcanosRadio.xcodeproj")

        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        commit_version_bump(
            message: "Increment build number to #{version_raw}.#{build_number} (fastlane alpha)",
            xcodeproj: "ArcanosRadio.xcodeproj")

        # add tag such as "v1.0.0-alpha.3431"
        add_git_tag(tag: "v#{version_alpha}.#{build_number}")
        push_to_git_remote
    end

    desc "Builds beta release and upload to Crashlytics"
    lane :beta do
        get_certificates(output_path: "./Certificates/")
        get_provisioning_profile(
            output_path: "./Certificates/",
            adhoc: true,
            provisioning_name: 'ArcanosTrial'
        )

        # Add "beta" to the version number, e.g: 1.0.0-beta
        # This will affect only this build, source code on the
        # repository will keep numbers only.
        version_raw = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")
        version_beta = version_raw + "-beta"
        increment_version_number(
            version_number: version_beta,
            xcodeproj: "ArcanosRadio.xcodeproj")

        build_app(scheme: "ArcanosRadio")
        changes = changelog_from_git_commits(tag_match_pattern: "*beta*")
        crashlytics(
            crashlytics_path: "./Frameworks/Crashlytics.framework",
            api_token: ENV['CRASHLYTICS_API_TOKEN'],
            build_secret: ENV['CRASHLYTICS_BUILD_SECRET'],
            groups: "dev-ios",
            notes: changes
        )

        # Remove "beta" from the version number, e.g: 1.0.0
        increment_version_number(
            version_number: version_raw,
            xcodeproj: "ArcanosRadio.xcodeproj")

        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        commit_version_bump(
            message: "Increment build number to #{version_raw}.#{build_number} (fastlane beta)",
            xcodeproj: "ArcanosRadio.xcodeproj")

        # add tag such as "v1.0.0-beta.3431"
        add_git_tag(tag: "v#{version_beta}.#{build_number}")
        push_to_git_remote
    end

    desc "Builds trial release and upload to Testflight"
    lane :trial do
        get_certificates(output_path: "./Certificates/")
        get_provisioning_profile(
            output_path: "./Certificates/",
            adhoc: false,
            provisioning_name: 'ArcanosStore'
        )

        build_app(scheme: "ArcanosRadio")
        changes = changelog_from_git_commits(tag_match_pattern: "*trial*")
        testflight(
            changelog: changes,
            beta_app_description: "Arcanos Web Radio app pre-release version.",
            beta_app_feedback_email: "luiz@developercity.de",
            distribute_external: true
        )

        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        version_raw = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")
        version_trial = version_raw + "-trial"
        commit_version_bump(
            message: "Increment build number to #{version_raw}.#{build_number} (fastlane trial)",
            xcodeproj: "ArcanosRadio.xcodeproj")

        # add tag such as "v1.0.0-trial.3431"
        add_git_tag(tag: "v#{version_trial}.#{build_number}")
        push_to_git_remote
    end

    lane :store do
        get_certificates(output_path: "./Certificates/")
        get_provisioning_profile(
            output_path: "./Certificates/",
            adhoc: false,
            provisioning_name: 'ArcanosStore'
        )

        build_app(scheme: "ArcanosRadio")
        upload_to_app_store(force: true)


        build_number = get_build_number(xcodeproj: "ArcanosRadio.xcodeproj")
        version = get_version_number(xcodeproj: "ArcanosRadio.xcodeproj")

        add_git_tag(tag: "v#{version}.#{build_number}")
        push_to_git_remote
    end

    lane :screenshots do
        ENV["SIMULATOR_STATUS_MAGIC_OVERRIDES"] = "enable"

        scan(scheme: "ArcanosRadio",
             derived_data_path: "DerivedData",
             build_for_testing: true)

        device_names = ['iPhone SE',
                        'iPhone 8',
                        'iPhone 8 Plus',
                        'iPhone X']

        languages = Hash['pt_BR' => 'pt-BR',
                         'en_US' => 'en' ]

        languages.each { |locale, language|
            ENV["KIF_LOCALE"] = locale
            ENV["KIF_LANGUAGE"] = language

            scan(scheme: "ArcanosRadio",
                 devices: device_names,
                 derived_data_path: "DerivedData",
                 test_without_building: true)
        }
    end

    lane :upload_metadata do
        upload_to_app_store(skip_binary_upload: true)
    end

    error do |lane, exception|
    end
end
